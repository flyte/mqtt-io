{
  "mqtt": {
    "meta": {
      "description": "Contains the configuration data used for connecting to an MQTT server.\n",
      "yaml_example": "mqtt:\n  host: test.mosquitto.org\n  port: 8883\n  topic_prefix: mqtt_io\n  ha_discovery:\n    enabled: yes\n  tls:\n    enabled: yes\n    ca_certs: mosquitto.org.crt\n    certfile: client.crt\n    keyfile: client.key\n",
      "title_id": "mqtt"
    },
    "type": "dict",
    "required": true,
    "schema": {
      "host": {
        "meta": {
          "description": "Host name or IP address of the MQTT server.",
          "title_id": "mqtt-host"
        },
        "type": "string",
        "empty": false,
        "required": true
      },
      "port": {
        "meta": {
          "description": "Port number to connect to on the MQTT server.",
          "title_id": "mqtt-port"
        },
        "type": "integer",
        "min": 1,
        "max": 65535,
        "required": false,
        "default": 1883
      },
      "user": {
        "meta": {
          "description": "Username to authenticate with on the MQTT server.",
          "title_id": "mqtt-user"
        },
        "type": "string",
        "required": false,
        "default": ""
      },
      "password": {
        "meta": {
          "description": "Password to authenticate with on the MQTT server.",
          "title_id": "mqtt-password"
        },
        "type": "string",
        "required": false,
        "default": ""
      },
      "client_id": {
        "meta": {
          "description": "[MQTT client ID](https://www.cloudmqtt.com/blog/2018-11-21-mqtt-what-is-client-id.html) to use on the MQTT server.\n",
          "title_id": "mqtt-client_id"
        },
        "type": "string",
        "required": false,
        "default": ""
      },
      "topic_prefix": {
        "meta": {
          "description": "Prefix to use for all topics.",
          "extra_info": "For example, a `topic_prefix` of `home/livingroom` would make a digital input\ncalled \"doorbell\" publish its changes to the `home/livingroom/input/doorbell`\ntopic.\n",
          "title_id": "mqtt-topic_prefix"
        },
        "type": "string",
        "required": false,
        "default": "",
        "coerce": "rstrip_slash"
      },
      "clean_session": {
        "meta": {
          "description": "Whether or not to start a\n[clean MQTT session](https://www.hivemq.com/blog/mqtt-essentials-part-7-persistent-session-queuing-messages/)\non every MQTT connection.\n",
          "title_id": "mqtt-clean_session"
        },
        "type": "boolean",
        "required": false,
        "default": false
      },
      "protocol": {
        "meta": {
          "description": "Version of the MQTT protocol to use.",
          "extra_info": "This renders in the documentation as a float, but should always be set within quotes.\n",
          "title_id": "mqtt-protocol"
        },
        "type": "string",
        "required": false,
        "empty": false,
        "coerce": "tostring",
        "default": "3.1.1",
        "allowed": [
          "3.1",
          "3.1.1"
        ]
      },
      "keepalive": {
        "meta": {
          "description": "How frequently in seconds to send\n[ping packets](https://www.hivemq.com/blog/mqtt-essentials-part-10-alive-client-take-over/)\nto the MQTT server.\n",
          "unit": "seconds",
          "title_id": "mqtt-keepalive"
        },
        "type": "integer",
        "min": 1,
        "required": false,
        "default": 10
      },
      "status_topic": {
        "meta": {
          "description": "Topic on which to send messages about the running status of this software.",
          "extra_info": "Sends the payloads configured in `status_payload_running`,\n`status_payload_stopped` and `status_payload_dead`.\n",
          "title_id": "mqtt-status_topic"
        },
        "type": "string",
        "required": false,
        "default": "status"
      },
      "status_payload_running": {
        "meta": {
          "description": "Payload to send on the status topic when the software is running.",
          "title_id": "mqtt-status_payload_running"
        },
        "type": "string",
        "required": false,
        "default": "running"
      },
      "status_payload_stopped": {
        "meta": {
          "description": "Payload to send on the status topic when the software has exited cleanly.",
          "title_id": "mqtt-status_payload_stopped"
        },
        "type": "string",
        "required": false,
        "default": "stopped"
      },
      "status_payload_dead": {
        "meta": {
          "description": "Payload to send on the status topic when the software has exited unexpectedly.",
          "extra_info": "Uses [MQTT Last Will and Testament](https://www.hivemq.com/blog/mqtt-essentials-part-9-last-will-and-testament/)\nto make the server automatically send this payload if our connection fails.\n",
          "title_id": "mqtt-status_payload_dead"
        },
        "type": "string",
        "required": false,
        "default": "dead"
      },
      "client_module": {
        "meta": {
          "description": "MQTT Client implementation module path.",
          "extra_info": "There's currently only one implementation, which uses the\n[aiomqtt](https://github.com/sbtinstruments/aiomqtt/) client.\n",
          "title_id": "mqtt-client_module"
        },
        "type": "string",
        "required": false,
        "default": "mqtt_io.mqtt.aiomqtt"
      },
      "ha_discovery": {
        "type": "dict",
        "required": false,
        "schema": {
          "enabled": {
            "meta": {
              "description": "Enable [Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)\nof our configured devices.\n",
              "title_id": "mqtt-ha_discovery-enabled"
            },
            "type": "boolean",
            "required": true
          },
          "prefix": {
            "meta": {
              "description": "Prefix for the Home Assistant MQTT discovery topic.",
              "title_id": "mqtt-ha_discovery-prefix"
            },
            "type": "string",
            "required": false,
            "default": "homeassistant",
            "coerce": "rstrip_slash"
          },
          "name": {
            "meta": {
              "description": "Name to identify this \"device\" in Home Assistant.",
              "title_id": "mqtt-ha_discovery-name"
            },
            "type": "string",
            "required": false,
            "default": "MQTT IO"
          }
        },
        "meta": {
          "title_id": "mqtt-ha_discovery"
        }
      },
      "tls": {
        "meta": {
          "description": "TLS/SSL settings for connecting to the MQTT server over an encrypted connection.\n",
          "yaml_example": "mqtt:\n  host: localhost\n  tls:\n    enabled: yes\n    ca_certs: mosquitto.org.crt\n    certfile: client.crt\n    keyfile: client.key\n",
          "title_id": "mqtt-tls"
        },
        "type": "dict",
        "required": false,
        "schema": {
          "enabled": {
            "meta": {
              "description": "Enable a secure connection to the MQTT server.",
              "extra_info": "Most of these options map directly to the\n[`tls_set()` arguments](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\non the Paho MQTT client.\n",
              "title_id": "mqtt-tls-enabled"
            },
            "type": "boolean",
            "required": true
          },
          "ca_certs": {
            "meta": {
              "description": "Path to the Certificate Authority certificate files that are to be treated\nas trusted by this client.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\n",
              "title_id": "mqtt-tls-ca_certs"
            },
            "type": "string",
            "required": false
          },
          "certfile": {
            "meta": {
              "description": "Path to the PEM encoded client certificate.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\n",
              "title_id": "mqtt-tls-certfile"
            },
            "type": "string",
            "required": false
          },
          "keyfile": {
            "meta": {
              "description": "Path to the PEM encoded client private key.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\n",
              "title_id": "mqtt-tls-keyfile"
            },
            "type": "string",
            "required": false
          },
          "cert_reqs": {
            "meta": {
              "description": "Defines the certificate requirements that the client imposes on the MQTT server.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\n",
              "extra_info": "By default this is `CERT_REQUIRED`, which means that the broker must provide a certificate.\n",
              "title_id": "mqtt-tls-cert_reqs"
            },
            "type": "string",
            "required": false,
            "allowed": [
              "CERT_NONE",
              "CERT_OPTIONAL",
              "CERT_REQUIRED"
            ],
            "default": "CERT_REQUIRED"
          },
          "tls_version": {
            "meta": {
              "description": "Specifies the version of the SSL/TLS protocol to be used.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\n",
              "extra_info": "By default the highest TLS version is detected.\n",
              "title_id": "mqtt-tls-tls_version"
            },
            "type": "string",
            "required": false
          },
          "ciphers": {
            "meta": {
              "description": "Which encryption ciphers are allowable for this connection.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)\n",
              "title_id": "mqtt-tls-ciphers"
            },
            "type": "string",
            "required": false
          },
          "insecure": {
            "meta": {
              "description": "Configure verification of the server hostname in the server certificate.\n[More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-insecure-set)\n",
              "extra_info": "If set to true, it is impossible to guarantee that the host you are\nconnecting to is not impersonating your server. This can be useful in\ninitial server testing, but makes it possible for a malicious third party\nto impersonate your server through DNS spoofing, for example.\nDo not use this function in a real system. Setting value to true means there\nis no point using encryption.\n",
              "title_id": "mqtt-tls-insecure"
            },
            "type": "boolean",
            "required": false,
            "default": false
          }
        }
      },
      "reconnect_delay": {
        "meta": {
          "description": "Time in seconds to wait between reconnect attempts.\n",
          "title_id": "mqtt-reconnect_delay"
        },
        "type": "integer",
        "required": false,
        "default": 2,
        "min": 1
      },
      "reconnect_count": {
        "meta": {
          "description": "Max number of retries of connections before giving up and exiting.\nNull value means infinite reconnects (default).\nThe counter is reset when the connection is reestablished successfully.\n",
          "title_id": "mqtt-reconnect_count"
        },
        "type": "integer",
        "required": false,
        "default": null,
        "nullable": true,
        "min": 0
      }
    }
  },
  "gpio_modules": {
    "meta": {
      "description": "List of GPIO modules to configure for use with inputs and/or outputs.\n",
      "extra_info": "Some modules require extra config entries, specified by the modules themselves.\nUntil the documentation is written for the individual modules, please refer to the\n`CONFIG_SCHEMA` value of the module's code in\n[the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).\nTODO: Link this to the pending wiki pages on each module's requirements.\n",
      "yaml_example": "gpio_modules:\n  - name: rpi_gpio\n    module: raspberrypi\n  \n  - name: pcf\n    module: pcf8574\n    i2c_bus_num: 1\n    chip_addr: 0x20\n",
      "title_id": "gpio_modules"
    },
    "type": "list",
    "required": false,
    "default": [],
    "schema": {
      "type": "dict",
      "allow_unknown": true,
      "schema": {
        "name": {
          "meta": {
            "description": "Your name for this configuration of the module. Will be referred to by entries\nin the `digital_inputs` and/or `digital_outputs` sections.\n",
            "title_id": "gpio_modules-star-name"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "module": {
          "meta": {
            "description": "Name of the module in the code. This is listed in the README's\n\"Supported Hardware\" section in brackets.\n",
            "title_id": "gpio_modules-star-module"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "cleanup": {
          "meta": {
            "description": "Whether to run the module's `cleanup()` method on exit.",
            "title_id": "gpio_modules-star-cleanup"
          },
          "type": "boolean",
          "required": false,
          "default": true
        }
      },
      "meta": {
        "title_id": "gpio_modules-star"
      }
    }
  },
  "sensor_modules": {
    "meta": {
      "description": "List of sensor modules to configure for use with sensor inputs.",
      "extra_info": "Some modules require extra config entries, specified by the modules themselves.\nUntil the documentation is written for the individual modules, please refer to the\n`CONFIG_SCHEMA` value of the module's code in\n[the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).\nTODO: Link this to the pending wiki pages on each module's requirements.\n",
      "yaml_example": "sensor_modules:\n  - name: dht\n    module: dht22\n    type: AM2302\n    pin: 4\n  \n  - name: ds\n    module: ds18b\n    type: DS18S20\n    address: 000803702e49\n",
      "title_id": "sensor_modules"
    },
    "type": "list",
    "required": false,
    "default": [],
    "schema": {
      "type": "dict",
      "allow_unknown": true,
      "schema": {
        "name": {
          "meta": {
            "description": "Your name for this configuration of the module. Will be referred to by entries\nin the `sensor_inputs` section.\n",
            "title_id": "sensor_modules-star-name"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "module": {
          "meta": {
            "description": "Name of the module in the code. This is listed in the README's\n\"Supported Hardware\" section in brackets.\n",
            "title_id": "sensor_modules-star-module"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "cleanup": {
          "meta": {
            "description": "Whether to run the module's `cleanup()` method on exit.",
            "title_id": "sensor_modules-star-cleanup"
          },
          "type": "boolean",
          "required": false,
          "default": true
        }
      },
      "meta": {
        "title_id": "sensor_modules-star"
      }
    }
  },
  "stream_modules": {
    "meta": {
      "description": "List of stream modules to configure.",
      "extra_info": "Some modules require extra config entries, specified by the modules themselves.\nUntil the documentation is written for the individual modules, please refer to the\n`CONFIG_SCHEMA` value of the module's code in\n[the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).\nTODO: Link this to the pending wiki pages on each module's requirements.\n",
      "yaml_example": "stream_modules:\n  - name: network_switch\n    module: serial\n    device: /dev/ttyUSB1\n    baud: 115200\n    interval: 10\n\n  - name: ups\n    module: serial\n    type: /dev/ttyUSB0\n    baud: 9600\n    interval: 1\n",
      "title_id": "stream_modules"
    },
    "type": "list",
    "required": false,
    "default": [],
    "schema": {
      "type": "dict",
      "allow_unknown": true,
      "schema": {
        "name": {
          "meta": {
            "description": "Your name for this configuration of the module. Will be used in the topic on\nwhich the stream's data is published and the topic on which messages can be\nsent for writing to the stream.\n",
            "title_id": "stream_modules-star-name"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "module": {
          "meta": {
            "description": "Name of the module in the code. This is listed in the README's\n\"Supported Hardware\" section in brackets.\n",
            "title_id": "stream_modules-star-module"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "cleanup": {
          "meta": {
            "description": "Whether to run the module's `cleanup()` method on exit.",
            "title_id": "stream_modules-star-cleanup"
          },
          "type": "boolean",
          "required": false,
          "default": true
        },
        "retain": {
          "meta": {
            "description": "Whether to set the `retain` flag on MQTT messages publishing data received\nfrom the stream.\n",
            "title_id": "stream_modules-star-retain"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "read_interval": {
          "meta": {
            "description": "How long to wait between polling the stream for new data.",
            "unit": "seconds",
            "title_id": "stream_modules-star-read_interval"
          },
          "type": "float",
          "required": false,
          "default": 60,
          "min": 0.01
        },
        "read": {
          "meta": {
            "description": "Whether to poll this stream for incoming data and publish it on an MQTT topic.\n",
            "title_id": "stream_modules-star-read"
          },
          "type": "boolean",
          "required": false,
          "default": true
        },
        "write": {
          "meta": {
            "description": "Whether to subscribe to MQTT messages on a topic and write messages received on it to the stream.",
            "title_id": "stream_modules-star-write"
          },
          "type": "boolean",
          "required": false,
          "default": true
        }
      },
      "meta": {
        "title_id": "stream_modules-star"
      }
    }
  },
  "digital_inputs": {
    "meta": {
      "description": "List of digital inputs to configure.",
      "extra_info": "Some modules require extra config entries, specified by the modules themselves.\nUntil the documentation is written for the individual modules, please refer to the\n`PIN_SCHEMA` and `INPUT_SCHEMA` values of the module's code in\n[the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).\nTODO: Link this to the pending wiki pages on each module's requirements.\n",
      "yaml_example": "gpio_modules:\n  - name: rpi\n    module: raspberrypi\n\ndigital_inputs:\n  - name: gpio0\n    module: rpi\n    pin: 0\n\n  - name: gpio1\n    module: rpi\n    pin: 1\n",
      "title_id": "digital_inputs"
    },
    "type": "list",
    "required": false,
    "default": [],
    "schema": {
      "type": "dict",
      "allow_unknown": true,
      "schema": {
        "name": {
          "meta": {
            "description": "Name of the input. Used in the MQTT topic when publishing input changes.\n\nThe topic that input changes will be published to is:\n`<mqtt.topic_prefix>/input/<this name>`\n",
            "title_id": "digital_inputs-star-name"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "module": {
          "meta": {
            "description": "Name of the module configured in `gpio_modules` that this input is attached to.\n",
            "title_id": "digital_inputs-star-module"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "pin": {
          "meta": {
            "description": "Which of the GPIO module's pins this input refers to.",
            "extra_info": "Depending on the GPIO module's implementation, this can be either a string\nor an integer.\n",
            "title_id": "digital_inputs-star-pin"
          },
          "type": [
            "string",
            "integer"
          ],
          "required": true,
          "empty": false
        },
        "on_payload": {
          "meta": {
            "description": "Payload to be sent when the input changes to what is considered to be \"on\".\nSee `inverted` below for the definition of \"on\" and \"off\".\n",
            "extra_info": "Make sure to avoid YAML's automatic boolean type conversion when setting this\noption by surrounding potential booleans with quotes.\nSee the \"Regexp\" section of the\n[YAML bool docs](https://yaml.org/type/bool.html) for all of the values that\nwill be parsed as boolean.\n",
            "title_id": "digital_inputs-star-on_payload"
          },
          "type": "string",
          "required": false,
          "empty": false,
          "default": "ON"
        },
        "off_payload": {
          "meta": {
            "description": "Payload to be sent when the input changes to what is considered to be \"off\".\nSee `inverted` below for the definition of \"on\" and \"off\".\n",
            "extra_info": "Make sure to avoid YAML's automatic boolean type conversion when setting this\noption by surrounding potential booleans with quotes.\nSee the \"Regexp\" section of the\n[YAML bool docs](https://yaml.org/type/bool.html) for all of the values that\nwill be parsed as boolean.\n",
            "title_id": "digital_inputs-star-off_payload"
          },
          "type": "string",
          "required": false,
          "empty": false,
          "default": "OFF"
        },
        "inverted": {
          "meta": {
            "description": "Invert the logic level so that \"low\" levels are considered to be \"on\" and\n\"high\" levels are considered \"off\".\n",
            "extra_info": "This can be useful for when an input is pulled \"high\" with a resistor and a\ndevice (like a button or another IC) connects it to ground when it's \"active\".\n",
            "title_id": "digital_inputs-star-inverted"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "pullup": {
          "meta": {
            "description": "Enable the pull-up resistor for this input so that the logic level is pulled\n\"high\" by default.\n",
            "extra_info": "Not all GPIO modules support pull-up resistors.",
            "title_id": "digital_inputs-star-pullup"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "pulldown": {
          "meta": {
            "description": "Enable the pull-down resistor for this input so that the logic level is pulled\n\"low\" by default.\n",
            "extra_info": "Not all GPIO modules support pull-down resistors.",
            "title_id": "digital_inputs-star-pulldown"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "interrupt": {
          "meta": {
            "description": "Configure this pin to trigger an interrupt when the logic level is \"rising\",\n\"falling\" or \"both\".\n",
            "extra_info": "Not all GPIO modules support interrupts, and those that do may do so in\nvarious ways.\nTODO: Add link to interrupt documentation.\n",
            "title_id": "digital_inputs-star-interrupt"
          },
          "type": "string",
          "required": false,
          "allowed": [
            "rising",
            "falling",
            "both"
          ]
        },
        "interrupt_for": {
          "meta": {
            "description": "List of other pin names that this pin is an interrupt for.\n\nThis is generally used on GPIO modules that provide software callbacks on\ninterrupts, so that we can attach another \"remote\" module's interrupt output\npin (one that changes logic level when one of its pins triggers an interrupt)\nto this input and use the callback to get the value of the \"remote\" pin and\npublish it on MQTT.\n\nTODO: Add link to interrupt documentation.\n",
            "title_id": "digital_inputs-star-interrupt_for"
          },
          "type": "list",
          "required": false,
          "minlength": 1,
          "schema": {
            "type": "string",
            "required": true,
            "meta": {
              "title_id": "digital_inputs-star-interrupt_for-star"
            }
          }
        },
        "bouncetime": {
          "meta": {
            "description": "Don't trigger interrupts more frequently than once per `bouncetime`.\n",
            "unit": "milliseconds",
            "title_id": "digital_inputs-star-bouncetime"
          },
          "type": "integer",
          "required": false,
          "default": 100,
          "min": 1
        },
        "retain": {
          "meta": {
            "description": "Set the retain flag on MQTT messages published on input change.",
            "title_id": "digital_inputs-star-retain"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "poll_interval": {
          "meta": {
            "description": "How long to wait between checking the value of this input.",
            "unit": "seconds",
            "extra_info": "When the pin is configured as an interrupt, the pin is no longer polled.\nThe only exception to this is if the pin is configured as an interrupt for\nanother pin. In this case, whether or not we poll is decided by the\n`poll_when_interrupt_for` setting below.\n",
            "title_id": "digital_inputs-star-poll_interval"
          },
          "type": "float",
          "required": false,
          "default": 0.1
        },
        "poll_when_interrupt_for": {
          "meta": {
            "description": "Poll this pin when it's configured as an interrupt for another pin.",
            "extra_info": "Polling the pin when it's configured as an interrupt for another pin is useful\nin order to make sure that if we somehow miss an interrupt on this pin (the\nremote module's interrupt output pin goes low (\"triggered\")), we\ndon't end up stuck in that state where we don't handle the remote module's\ninterrupt at all. If we poll the \"triggered\" value on this pin and our\ninterrupt handling hasn't dealt with it, then we'll handle it here.\n",
            "title_id": "digital_inputs-star-poll_when_interrupt_for"
          },
          "type": "boolean",
          "required": false,
          "default": true
        },
        "ha_discovery": {
          "meta": {
            "description": "Configures the\n[Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)\nfor this pin.\n\nAny values entered into this section will be sent as part of the discovery\nconfig payload. See the above link for documentation.\n",
            "yaml_example": "digital_inputs:\n  - name: livingroom_motion\n    module: rpi\n    ha_discovery:\n      component: binary_sensor\n      name: Living Room Motion\n      device_class: motion\n",
            "title_id": "digital_inputs-star-ha_discovery"
          },
          "type": "dict",
          "allow_unknown": true,
          "schema": {
            "component": {
              "meta": {
                "description": "Type of component to report this input as to Home Assistant.",
                "title_id": "digital_inputs-star-ha_discovery-component"
              },
              "type": "string",
              "required": false,
              "empty": false,
              "default": "binary_sensor"
            }
          }
        }
      },
      "meta": {
        "title_id": "digital_inputs-star"
      }
    }
  },
  "digital_outputs": {
    "meta": {
      "description": "List of digital outputs to configure.",
      "extra_info": "Some modules require extra config entries, specified by the modules themselves.\nUntil the documentation is written for the individual modules, please refer to the\n`PIN_SCHEMA` and `OUTPUT_SCHEMA` values of the module's code in\n[the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).\nTODO: Link this to the pending wiki pages on each module's requirements.\n",
      "yaml_example": "gpio_modules:\n  - name: rpi\n    module: raspberrypi\n\ndigital_outputs:\n  - name: gpio0\n    module: rpi\n    pin: 0\n\n  - name: gpio1\n    module: rpi\n    pin: 1\n",
      "title_id": "digital_outputs"
    },
    "type": "list",
    "required": false,
    "default": [],
    "schema": {
      "type": "dict",
      "allow_unknown": true,
      "schema": {
        "name": {
          "meta": {
            "description": "Name of the output. Used in the MQTT topics that are subscribed to in order to\nchange the output value according to received MQTT messages, as well as in the\nMQTT topic for publishing output changes.\n\nThe topics subscribed to for each output are:\n- `<mqtt.topic_prefix>/output/<this name>/set`\n- `<mqtt.topic_prefix>/output/<this name>/set_on_ms`\n- `<mqtt.topic_prefix>/output/<this name>/set_off_ms`\n\nThe topic that output changes will be published to is:\n`<mqtt.topic_prefix>/output/<this name>`\n",
            "title_id": "digital_outputs-star-name"
          },
          "type": "string",
          "required": true
        },
        "module": {
          "meta": {
            "description": "Name of the module configured in `gpio_modules` that this output is attached to.\n",
            "title_id": "digital_outputs-star-module"
          },
          "type": "string",
          "required": true
        },
        "pin": {
          "meta": {
            "description": "Which of the GPIO module's pins this output refers to.",
            "extra_info": "Depending on the GPIO module's implementation, this can be either a string\nor an integer.\n",
            "title_id": "digital_outputs-star-pin"
          },
          "type": [
            "string",
            "integer"
          ],
          "required": true,
          "empty": false
        },
        "on_payload": {
          "meta": {
            "description": "Payload to consider as \"on\" when received to the `/set` topic for this output.\nSee `inverted` below for the definition of \"on\" and \"off\".\n",
            "extra_info": "Make sure to avoid YAML's automatic boolean type conversion when setting this\noption by surrounding potential booleans with quotes.\nSee the \"Regexp\" section of the\n[YAML bool docs](https://yaml.org/type/bool.html) for all of the values that\nwill be parsed as boolean.\n",
            "title_id": "digital_outputs-star-on_payload"
          },
          "type": "string",
          "required": false,
          "empty": false,
          "default": "ON"
        },
        "off_payload": {
          "meta": {
            "description": "Payload to consider as \"off\" when received to the `/set` topic for this output.\nSee `inverted` below for the definition of \"on\" and \"off\".\n",
            "extra_info": "Make sure to avoid YAML's automatic boolean type conversion when setting this\noption by surrounding potential booleans with quotes.\nSee the \"Regexp\" section of the\n[YAML bool docs](https://yaml.org/type/bool.html) for all of the values that\nwill be parsed as boolean.\n",
            "title_id": "digital_outputs-star-off_payload"
          },
          "type": "string",
          "required": false,
          "empty": false,
          "default": "OFF"
        },
        "inverted": {
          "meta": {
            "description": "Invert the logic level so that \"low\" levels are considered to be \"on\" and\n\"high\" levels are considered \"off\".\n",
            "extra_info": "This can be useful for when an output turns something on when its output is\n\"low\".\n",
            "title_id": "digital_outputs-star-inverted"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "timed_set_ms": {
          "meta": {
            "description": "How long to set an output to the desired value on receipt of an MQTT message\nto the `/set` topic before then setting it back to the opposite value.\n",
            "unit": "milliseconds",
            "extra_info": "This may be useful if the output controls a device where leaving the ouput\n\"on\" for too long would be detrimental. Using this option means that you don't\nhave to rely on a second \"off\" message getting through MQTT for the output to\nreturn to a safe state.\n",
            "title_id": "digital_outputs-star-timed_set_ms"
          },
          "type": "integer",
          "required": false,
          "empty": true
        },
        "initial": {
          "meta": {
            "description": "Set the output to an initial \"high\" or \"low\" state when the software starts.\n",
            "title_id": "digital_outputs-star-initial"
          },
          "type": "string",
          "required": false,
          "allowed": [
            "high",
            "low"
          ]
        },
        "publish_initial": {
          "meta": {
            "description": "Whether to publish an MQTT message for the initial \"high\" or \"low\" state set\nabove.\n",
            "title_id": "digital_outputs-star-publish_initial"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "retain": {
          "meta": {
            "description": "Set the retain flag on MQTT messages published on output change.",
            "title_id": "digital_outputs-star-retain"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "ha_discovery": {
          "meta": {
            "description": "Configures the\n[Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)\nfor this pin.\n\nAny values entered into this section will be sent as part of the discovery\nconfig payload. See the above link for documentation.\n",
            "yaml_example": "digital_outputs:\n  - name: garage_door1\n    module: rpi\n    ha_discovery:\n      component: switch\n      name: Ferrari Garage Door\n      device_class: garage_door\n",
            "title_id": "digital_outputs-star-ha_discovery"
          },
          "type": "dict",
          "allow_unknown": true,
          "schema": {
            "component": {
              "meta": {
                "description": "Type of component to report this output as to Home Assistant.",
                "title_id": "digital_outputs-star-ha_discovery-component"
              },
              "type": "string",
              "required": false,
              "empty": false,
              "default": "switch"
            }
          }
        }
      },
      "meta": {
        "title_id": "digital_outputs-star"
      }
    }
  },
  "sensor_inputs": {
    "meta": {
      "description": "List of sensor inputs to configure.",
      "extra_info": "Some modules require extra config entries, specified by the modules themselves.\nUntil the documentation is written for the individual modules, please refer to the\n`MODULE_SCHEMA` values of the module's code in\n[the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).\nTODO: Link this to the pending wiki pages on each module's requirements.\n",
      "yaml_example": "sensor_modules:\n  - name: dht\n    module: dht22\n    type: AM2302\n    pin: 4\n\nsensor_inputs:\n  - name: workshop_temp\n    module: dht\n    type: temperature\n    interval: 30\n\n  - name: workshop_humidity\n    module: dht\n    type: humidity\n    interval: 60\n",
      "title_id": "sensor_inputs"
    },
    "type": "list",
    "required": false,
    "default": [],
    "schema": {
      "type": "dict",
      "allow_unknown": true,
      "schema": {
        "name": {
          "meta": {
            "description": "Name of the sensor. Used in the MQTT topic when publishing sensor values.\n\nThe topic that sensor values will be published to is:\n`<mqtt.topic_prefix>/sensor/<this name>`\n",
            "title_id": "sensor_inputs-star-name"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "module": {
          "meta": {
            "description": "Name of the module configured in `sensor_modules` that this sensor reading\ncomes from.\n",
            "title_id": "sensor_inputs-star-module"
          },
          "type": "string",
          "required": true,
          "empty": false
        },
        "retain": {
          "meta": {
            "description": "Set the retain flag on MQTT messages published on sensor read.",
            "title_id": "sensor_inputs-star-retain"
          },
          "type": "boolean",
          "required": false,
          "default": false
        },
        "interval": {
          "meta": {
            "description": "How long to wait between checking the value of this sensor.",
            "unit": "seconds",
            "title_id": "sensor_inputs-star-interval"
          },
          "type": "integer",
          "required": false,
          "default": 60,
          "min": 1
        },
        "digits": {
          "meta": {
            "description": "How many decimal places to round the sensor reading to.",
            "title_id": "sensor_inputs-star-digits"
          },
          "type": "integer",
          "required": false,
          "default": 2,
          "min": 0
        },
        "ha_discovery": {
          "meta": {
            "description": "Configures the\n[Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)\nfor this sensor.\n\nAny values entered into this section will be sent as part of the discovery\nconfig payload. See the above link for documentation.\n",
            "yaml_example": "sensor_inputs:\n  - name: workshop_temp\n    module: dht\n    type: temperature\n    ha_discovery:\n      name: Workshop Temperature\n      device_class: temperature\n\n  - name: workshop_humidity\n    module: dht\n    type: humidity\n    ha_discovery:\n      name: Workshop Humidity\n      device_class: humidity\n",
            "title_id": "sensor_inputs-star-ha_discovery"
          },
          "type": "dict",
          "allow_unknown": true,
          "schema": {
            "component": {
              "meta": {
                "description": "Type of component to report this sensor as to Home Assistant.",
                "title_id": "sensor_inputs-star-ha_discovery-component"
              },
              "type": "string",
              "required": false,
              "empty": false,
              "default": "sensor"
            },
            "expire_after": {
              "meta": {
                "description": "How long after receiving a sensor update to declare it invalid.",
                "extra_info": "Defaults to `interval` * 2 + 5\n",
                "title_id": "sensor_inputs-star-ha_discovery-expire_after"
              },
              "type": "integer",
              "required": false,
              "min": 1
            }
          }
        }
      },
      "meta": {
        "title_id": "sensor_inputs-star"
      }
    }
  },
  "logging": {
    "meta": {
      "description": "Config to pass directly to\n[Python's logging module](https://docs.python.org/3/library/logging.config.html#logging-config-dictschema)\nto influence the logging output of the software.\n",
      "title_id": "logging"
    },
    "type": "dict",
    "required": false,
    "allow_unknown": true,
    "default": {
      "version": 1,
      "handlers": {
        "console": {
          "class": "logging.StreamHandler",
          "formatter": "default",
          "level": "INFO"
        }
      },
      "formatters": {
        "default": {
          "format": "%(asctime)s %(name)s [%(levelname)s] %(message)s",
          "datefmt": "%Y-%m-%d %H:%M:%S"
        }
      },
      "loggers": {
        "mqtt_io": {
          "level": "INFO",
          "handlers": [
            "console"
          ],
          "propagate": true
        }
      }
    }
  },
  "reporting": {
    "meta": {
      "description": "Configuration for reporting back to the developers using\n[Sentry](https://sentry.io/welcome/) to help diagnose issues.\n\n*This is **not** enabled by default*\n",
      "extra_info": "Your config file is included in the report, but has the host, port and username\nhashed and the password removed. Sentry's SDK automatically attempts to remove\npassword data, but the other values may still be exposed within the Python traceback\ncontext.\n",
      "yaml_example": "reporting:\n  enabled: yes\n  issue_id: 123\n",
      "title_id": "reporting"
    },
    "type": "dict",
    "required": false,
    "schema": {
      "enabled": {
        "meta": {
          "description": "Enable the sending of error reports to the developers if the software crashes.\n",
          "title_id": "reporting-enabled"
        },
        "type": "boolean",
        "required": true
      },
      "issue_id": {
        "meta": {
          "description": "The GitHub Issue ID that the specific error relates to.",
          "extra_info": "This is useful if you've reported a specific issue on the project repository and\nwant to provide additional context to help the developers diagnose the issue.\n",
          "title_id": "reporting-issue_id"
        },
        "type": "integer",
        "required": false
      }
    }
  },
  "options": {
    "meta": {
      "description": "Miscellaneous options regarding the runtime behaviour of MQTT IO.",
      "yaml_example": "options:\n  install_requirements: no\n",
      "title_id": "options"
    },
    "type": "dict",
    "required": false,
    "default": {},
    "schema": {
      "install_requirements": {
        "meta": {
          "description": "Whether to install missing module packages on startup.",
          "title_id": "options-install_requirements"
        },
        "type": "boolean",
        "required": false,
        "default": true
      }
    }
  }
}
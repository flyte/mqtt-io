mqtt:
  meta:
    description: |
      Contains the configuration data used for connecting to an MQTT server.
    yaml_example: |
      mqtt:
        host: test.mosquitto.org
        port: 8883
        topic_prefix: mqtt_io
        ha_discovery:
          enabled: yes
        tls:
          enabled: yes
          ca_certs: mosquitto.org.crt
          certfile: client.crt
          keyfile: client.key
  type: dict
  required: yes
  schema:
    host:
      meta:
        description: Host name or IP address of the MQTT server.
      type: string
      empty: no
      required: yes
    port:
      meta:
        description: Port number to connect to on the MQTT server.
      type: integer
      min: 1
      max: 65535
      required: no
      default: 1883
    user:
      meta:
        description: Username to authenticate with on the MQTT server.
      type: string
      required: no
      default: ""
    password:
      meta:
        description: Password to authenticate with on the MQTT server.
      type: string
      required: no
      default: ""
    client_id:
      meta:
        description: |
          [MQTT client ID](https://www.cloudmqtt.com/blog/2018-11-21-mqtt-what-is-client-id.html) to use on the MQTT server.
      type: string
      required: no
      default: ""
    topic_prefix:
      meta:
        description: Prefix to use for all topics.
        extra_info: |
          For example, a `topic_prefix` of `home/livingroom` would make a digital input
          called "doorbell" publish its changes to the `home/livingroom/input/doorbell`
          topic.
      type: string
      required: no
      default: ""
      coerce: rstrip_slash
    clean_session:
      meta:
        description: |
          Whether or not to start a
          [clean MQTT session](https://www.hivemq.com/blog/mqtt-essentials-part-7-persistent-session-queuing-messages/)
          on every MQTT connection.
      type: boolean
      required: no
      default: false
    protocol:
      meta:
        description: Version of the MQTT protocol to use.
        extra_info: |
          This renders in the documentation as a float, but should always be set within quotes.
      type: string
      required: no
      empty: no
      coerce: tostring
      default: "3.1.1"
      allowed:
        - "3.1"
        - "3.1.1"
    keepalive:
      meta:
        description: |
          How frequently in seconds to send
          [ping packets](https://www.hivemq.com/blog/mqtt-essentials-part-10-alive-client-take-over/)
          to the MQTT server.
        unit: seconds
      type: integer
      min: 1
      required: no
      default: 10
    status_topic:
      meta:
        description: Topic on which to send messages about the running status of this software.
        extra_info: |
          Sends the payloads configured in `status_payload_running`,
          `status_payload_stopped` and `status_payload_dead`.
      type: string
      required: no
      default: status
    status_payload_running:
      meta:
        description: Payload to send on the status topic when the software is running.
      type: string
      required: no
      default: running
    status_payload_stopped:
      meta:
        description: Payload to send on the status topic when the software has exited cleanly.
      type: string
      required: no
      default: stopped
    status_payload_dead:
      meta:
        description: Payload to send on the status topic when the software has exited unexpectedly.
        extra_info: |
          Uses [MQTT Last Will and Testament](https://www.hivemq.com/blog/mqtt-essentials-part-9-last-will-and-testament/)
          to make the server automatically send this payload if our connection fails.
      type: string
      required: no
      default: dead
    client_module:
      meta:
        description: MQTT Client implementation module path.
        extra_info: |
          There's currently only one implementation, which uses the
          [asyncio-mqtt](https://github.com/sbtinstruments/asyncio-mqtt/) client.
      type: string
      required: no
      default: mqtt_io.mqtt.asyncio_mqtt
    ha_discovery:
      type: dict
      required: no
      schema:
        enabled:
          meta:
            description: |
              Enable [Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)
              of our configured devices.
          type: boolean
          required: yes
        prefix:
          meta:
            description: Prefix for the Home Assistant MQTT discovery topic.
          type: string
          required: no
          default: "homeassistant"
          coerce: rstrip_slash
        name:
          meta:
            description: Name to identify this "device" in Home Assistant.
          type: string
          required: no
          default: "MQTT IO"
        # TODO: Tasks pending completion -@flyte at 04/03/2021, 21:42:13
        # Add whitelist and blacklist for configs to announce
    tls:
      meta:
        description: |
          TLS/SSL settings for connecting to the MQTT server over an encrypted connection.
        yaml_example: |
          mqtt:
            host: localhost
            tls:
              enabled: yes
              ca_certs: mosquitto.org.crt
              certfile: client.crt
              keyfile: client.key
      type: dict
      required: no
      schema:
        enabled:
          meta:
            description: Enable a secure connection to the MQTT server.
            extra_info: |
              Most of these options map directly to the
              [`tls_set()` arguments](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
              on the Paho MQTT client.
          type: boolean
          required: yes
        ca_certs:
          meta:
            description: |
              Path to the Certificate Authority certificate files that are to be treated
              as trusted by this client.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
          type: string
          required: no
        certfile:
          meta:
            description: |
              Path to the PEM encoded client certificate.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
          type: string
          required: no
        keyfile:
          meta:
            description: |
              Path to the PEM encoded client private key.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
          type: string
          required: no
        cert_reqs:
          meta:
            description: |
              Defines the certificate requirements that the client imposes on the MQTT server.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
            extra_info: |
              By default this is `CERT_REQUIRED`, which means that the broker must provide a certificate.
          type: string
          required: no
          allowed:
            - CERT_NONE
            - CERT_OPTIONAL
            - CERT_REQUIRED
          default: CERT_REQUIRED
        tls_version:
          meta:
            description: |
              Specifies the version of the SSL/TLS protocol to be used.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
            extra_info: |
              By default the highest TLS version is detected.
          type: string
          required: no
        ciphers:
          meta:
            description: |
              Which encryption ciphers are allowable for this connection.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-set)
          type: string
          required: no
        insecure:
          meta:
            description: |
              Configure verification of the server hostname in the server certificate.
              [More info](https://www.eclipse.org/paho/index.php?page=clients/python/docs/index.php#tls-insecure-set)
            extra_info: |
              If set to true, it is impossible to guarantee that the host you are
              connecting to is not impersonating your server. This can be useful in
              initial server testing, but makes it possible for a malicious third party
              to impersonate your server through DNS spoofing, for example.
              Do not use this function in a real system. Setting value to true means there
              is no point using encryption.
          type: boolean
          required: no
          default: false
    reconnect_delay:
      meta:
        description: |
          Time in seconds to wait between reconnect attempts.
      type: integer
      required: no
      default: 2
      min: 1
    reconnect_count:
      meta:
        description: |
          Max number of retries of connections before giving up and exiting.
          Null value means infinite reconnects (default).
          The counter is reset when the connection is reestablished successfully.
      type: integer
      required: no
      default: null
      nullable: yes
      min: 0
gpio_modules:
  meta:
    description: |
      List of GPIO modules to configure for use with inputs and/or outputs.
    extra_info: |
      Some modules require extra config entries, specified by the modules themselves.
      Until the documentation is written for the individual modules, please refer to the
      `CONFIG_SCHEMA` value of the module's code in
      [the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).
      TODO: Link this to the pending wiki pages on each module's requirements.
    yaml_example: |
      gpio_modules:
        - name: rpi_gpio
          module: raspberrypi
        
        - name: pcf
          module: pcf8574
          i2c_bus_num: 1
          chip_addr: 0x20
  type: list
  required: no
  default: []
  schema:
    type: dict
    allow_unknown: yes
    schema:
      name:
        meta:
          description: |
            Your name for this configuration of the module. Will be referred to by entries
            in the `digital_inputs` and/or `digital_outputs` sections.
        type: string
        required: yes
        empty: no
      module:
        meta:
          description: |
            Name of the module in the code. This is listed in the README's
            "Supported Hardware" section in brackets.
        type: string
        required: yes
        empty: no
      cleanup:
        meta:
          description: Whether to run the module's `cleanup()` method on exit.
        type: boolean
        required: no
        default: yes

sensor_modules:
  meta:
    description: List of sensor modules to configure for use with sensor inputs.
    extra_info: |
      Some modules require extra config entries, specified by the modules themselves.
      Until the documentation is written for the individual modules, please refer to the
      `CONFIG_SCHEMA` value of the module's code in
      [the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).
      TODO: Link this to the pending wiki pages on each module's requirements.
    yaml_example: |
      sensor_modules:
        - name: dht
          module: dht22
          type: AM2302
          pin: 4
        
        - name: ds
          module: ds18b
          type: DS18S20
          address: 000803702e49
  type: list
  required: no
  default: []
  schema:
    type: dict
    allow_unknown: yes
    schema:
      name:
        meta:
          description: |
            Your name for this configuration of the module. Will be referred to by entries
            in the `sensor_inputs` section.
        type: string
        required: yes
        empty: no
      module:
        meta:
          description: |
            Name of the module in the code. This is listed in the README's
            "Supported Hardware" section in brackets.
        type: string
        required: yes
        empty: no
      cleanup:
        meta:
          description: Whether to run the module's `cleanup()` method on exit.
        type: boolean
        required: no
        default: yes

stream_modules:
  meta:
    description: List of stream modules to configure.
    extra_info: |
      Some modules require extra config entries, specified by the modules themselves.
      Until the documentation is written for the individual modules, please refer to the
      `CONFIG_SCHEMA` value of the module's code in
      [the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).
      TODO: Link this to the pending wiki pages on each module's requirements.
    yaml_example: |
      stream_modules:
        - name: network_switch
          module: serial
          device: /dev/ttyUSB1
          baud: 115200
          interval: 10

        - name: ups
          module: serial
          type: /dev/ttyUSB0
          baud: 9600
          interval: 1
  type: list
  required: no
  default: []
  schema:
    type: dict
    allow_unknown: yes
    schema:
      name:
        meta:
          description: |
            Your name for this configuration of the module. Will be used in the topic on
            which the stream's data is published and the topic on which messages can be
            sent for writing to the stream.
        type: string
        required: yes
        empty: no
      module:
        meta:
          description: |
            Name of the module in the code. This is listed in the README's
            "Supported Hardware" section in brackets.
        type: string
        required: yes
        empty: no
      cleanup:
        meta:
          description: Whether to run the module's `cleanup()` method on exit.
        type: boolean
        required: no
        default: yes
      retain:
        meta:
          description: |
            Whether to set the `retain` flag on MQTT messages publishing data received
            from the stream.
        type: boolean
        required: no
        default: no
      read_interval:
        meta:
          description: How long to wait between polling the stream for new data.
          unit: seconds
        type: float
        required: no
        default: 60
        min: 0.01
      read:
        meta:
          description: |
            Whether to poll this stream for incoming data and publish it on an MQTT topic.
        type: boolean
        required: no
        default: yes
      write:
        meta:
          description:
            Whether to subscribe to MQTT messages on a topic and write messages received
            on it to the stream.
        type: boolean
        required: no
        default: yes

digital_inputs:
  meta:
    description: List of digital inputs to configure.
    extra_info: |
      Some modules require extra config entries, specified by the modules themselves.
      Until the documentation is written for the individual modules, please refer to the
      `PIN_SCHEMA` and `INPUT_SCHEMA` values of the module's code in
      [the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).
      TODO: Link this to the pending wiki pages on each module's requirements.
    yaml_example: |
      gpio_modules:
        - name: rpi
          module: raspberrypi
      
      digital_inputs:
        - name: gpio0
          module: rpi
          pin: 0

        - name: gpio1
          module: rpi
          pin: 1
  type: list
  required: no
  default: []
  schema:
    type: dict
    allow_unknown: yes
    schema:
      name:
        meta:
          description: |
            Name of the input. Used in the MQTT topic when publishing input changes.

            The topic that input changes will be published to is:
            `<mqtt.topic_prefix>/input/<this name>`
        type: string
        required: yes
        empty: no
      module:
        meta:
          description: |
            Name of the module configured in `gpio_modules` that this input is attached to.
        type: string
        required: yes
        empty: no
      pin:
        meta:
          description: Which of the GPIO module's pins this input refers to.
          extra_info: |
            Depending on the GPIO module's implementation, this can be either a string
            or an integer.
        type:
          - string
          - integer
        required: yes
        empty: no
      on_payload:
        meta:
          description: |
            Payload to be sent when the input changes to what is considered to be "on".
            See `inverted` below for the definition of "on" and "off".
          extra_info: |
            Make sure to avoid YAML's automatic boolean type conversion when setting this
            option by surrounding potential booleans with quotes.
            See the "Regexp" section of the
            [YAML bool docs](https://yaml.org/type/bool.html) for all of the values that
            will be parsed as boolean.
        type: string
        required: no
        empty: no
        default: "ON"
      off_payload:
        meta:
          description: |
            Payload to be sent when the input changes to what is considered to be "off".
            See `inverted` below for the definition of "on" and "off".
          extra_info: |
            Make sure to avoid YAML's automatic boolean type conversion when setting this
            option by surrounding potential booleans with quotes.
            See the "Regexp" section of the
            [YAML bool docs](https://yaml.org/type/bool.html) for all of the values that
            will be parsed as boolean.
        type: string
        required: no
        empty: no
        default: "OFF"
      inverted:
        meta:
          description: |
            Invert the logic level so that "low" levels are considered to be "on" and
            "high" levels are considered "off".
          extra_info: |
            This can be useful for when an input is pulled "high" with a resistor and a
            device (like a button or another IC) connects it to ground when it's "active".
        type: boolean
        required: no
        default: no
      pullup:
        meta:
          description: |
            Enable the pull-up resistor for this input so that the logic level is pulled
            "high" by default.
          extra_info:
            Not all GPIO modules support pull-up resistors.
        type: boolean
        required: no
        default: no
      pulldown:
        meta:
          description: |
            Enable the pull-down resistor for this input so that the logic level is pulled
            "low" by default.
          extra_info:
            Not all GPIO modules support pull-down resistors.
        type: boolean
        required: no
        default: no
      interrupt:
        meta:
          description: |
            Configure this pin to trigger an interrupt when the logic level is "rising",
            "falling" or "both".
          extra_info: |
            Not all GPIO modules support interrupts, and those that do may do so in
            various ways.
            TODO: Add link to interrupt documentation.
        type: string
        required: no
        allowed:
          - rising
          - falling
          - both
      interrupt_for:
        meta:
          description: |
            List of other pin names that this pin is an interrupt for.

            This is generally used on GPIO modules that provide software callbacks on
            interrupts, so that we can attach another "remote" module's interrupt output
            pin (one that changes logic level when one of its pins triggers an interrupt)
            to this input and use the callback to get the value of the "remote" pin and
            publish it on MQTT.

            TODO: Add link to interrupt documentation.
        type: list
        required: no
        minlength: 1
        schema:
          type: string
          required: yes
      bouncetime:
        meta:
          description: |
            Don't trigger interrupts more frequently than once per `bouncetime`.
          unit: milliseconds
        type: integer
        required: no
        default: 100
        min: 1
      retain:
        meta:
          description: Set the retain flag on MQTT messages published on input change.
        type: boolean
        required: no
        default: no
      poll_interval:
        meta:
          description: How long to wait between checking the value of this input.
          unit: seconds
          extra_info: |
            When the pin is configured as an interrupt, the pin is no longer polled.
            The only exception to this is if the pin is configured as an interrupt for
            another pin. In this case, whether or not we poll is decided by the
            `poll_when_interrupt_for` setting below.
        type: float
        required: no
        default: 0.1
      poll_when_interrupt_for:
        meta:
          description: Poll this pin when it's configured as an interrupt for another pin.
          extra_info: |
            Polling the pin when it's configured as an interrupt for another pin is useful
            in order to make sure that if we somehow miss an interrupt on this pin (the
            remote module's interrupt output pin goes low ("triggered")), we
            don't end up stuck in that state where we don't handle the remote module's
            interrupt at all. If we poll the "triggered" value on this pin and our
            interrupt handling hasn't dealt with it, then we'll handle it here.
        type: boolean
        required: no
        default: yes
      ha_discovery:
        meta:
          description: |
            Configures the
            [Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)
            for this pin.

            Any values entered into this section will be sent as part of the discovery
            config payload. See the above link for documentation.
          yaml_example: |
            digital_inputs:
              - name: livingroom_motion
                module: rpi
                ha_discovery:
                  component: binary_sensor
                  name: Living Room Motion
                  device_class: motion
        type: dict
        allow_unknown: yes
        schema:
          component:
            meta:
              description: Type of component to report this input as to Home Assistant.
            type: string
            required: no
            empty: no
            default: binary_sensor

digital_outputs:
  meta:
    description: List of digital outputs to configure.
    extra_info: |
      Some modules require extra config entries, specified by the modules themselves.
      Until the documentation is written for the individual modules, please refer to the
      `PIN_SCHEMA` and `OUTPUT_SCHEMA` values of the module's code in
      [the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).
      TODO: Link this to the pending wiki pages on each module's requirements.
    yaml_example: |
      gpio_modules:
        - name: rpi
          module: raspberrypi
      
      digital_outputs:
        - name: gpio0
          module: rpi
          pin: 0

        - name: gpio1
          module: rpi
          pin: 1
  type: list
  required: no
  default: []
  schema:
    type: dict
    allow_unknown: yes
    schema:
      name:
        meta:
          description: |
            Name of the output. Used in the MQTT topics that are subscribed to in order to
            change the output value according to received MQTT messages, as well as in the
            MQTT topic for publishing output changes.

            The topics subscribed to for each output are:
            - `<mqtt.topic_prefix>/output/<this name>/set`
            - `<mqtt.topic_prefix>/output/<this name>/set_on_ms`
            - `<mqtt.topic_prefix>/output/<this name>/set_off_ms`

            The topic that output changes will be published to is:
            `<mqtt.topic_prefix>/output/<this name>`
        type: string
        required: yes
      module:
        meta:
          description: |
            Name of the module configured in `gpio_modules` that this output is attached to.
        type: string
        required: yes
      pin:
        meta:
          description: Which of the GPIO module's pins this output refers to.
          extra_info: |
            Depending on the GPIO module's implementation, this can be either a string
            or an integer.
        type:
          - string
          - integer
        required: yes
        empty: no
      on_payload:
        meta:
          description: |
            Payload to consider as "on" when received to the `/set` topic for this output.
            See `inverted` below for the definition of "on" and "off".
          extra_info: |
            Make sure to avoid YAML's automatic boolean type conversion when setting this
            option by surrounding potential booleans with quotes.
            See the "Regexp" section of the
            [YAML bool docs](https://yaml.org/type/bool.html) for all of the values that
            will be parsed as boolean.
        type: string
        required: no
        empty: no
        default: "ON"
      off_payload:
        meta:
          description: |
            Payload to consider as "off" when received to the `/set` topic for this output.
            See `inverted` below for the definition of "on" and "off".
          extra_info: |
            Make sure to avoid YAML's automatic boolean type conversion when setting this
            option by surrounding potential booleans with quotes.
            See the "Regexp" section of the
            [YAML bool docs](https://yaml.org/type/bool.html) for all of the values that
            will be parsed as boolean.
        type: string
        required: no
        empty: no
        default: "OFF"
      inverted:
        meta:
          description: |
            Invert the logic level so that "low" levels are considered to be "on" and
            "high" levels are considered "off".
          extra_info: |
            This can be useful for when an output turns something on when its output is
            "low".
        type: boolean
        required: no
        default: no
      timed_set_ms:
        meta:
          description: |
            How long to set an output to the desired value on receipt of an MQTT message
            to the `/set` topic before then setting it back to the opposite value.
          unit: milliseconds
          extra_info: |
            This may be useful if the output controls a device where leaving the ouput
            "on" for too long would be detrimental. Using this option means that you don't
            have to rely on a second "off" message getting through MQTT for the output to
            return to a safe state.
        type: integer
        required: no
        empty: yes
      initial:
        meta:
          description: |
            Set the output to an initial "high" or "low" state when the software starts.
        type: string
        required: no
        allowed:
          - high
          - low
      publish_initial:
        meta:
          description: |
            Whether to publish an MQTT message for the initial "high" or "low" state set
            above.
        type: boolean
        required: no
        default: no
      retain:
        meta:
          description: Set the retain flag on MQTT messages published on output change.
        type: boolean
        required: no
        default: no
      ha_discovery:
        meta:
          description: |
            Configures the
            [Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)
            for this pin.

            Any values entered into this section will be sent as part of the discovery
            config payload. See the above link for documentation.
          yaml_example: |
            digital_outputs:
              - name: garage_door1
                module: rpi
                ha_discovery:
                  component: switch
                  name: Ferrari Garage Door
                  device_class: garage_door
        type: dict
        allow_unknown: yes
        schema:
          component:
            meta:
              description: Type of component to report this output as to Home Assistant.
            type: string
            required: no
            empty: no
            default: switch

sensor_inputs:
  meta:
    description: List of sensor inputs to configure.
    extra_info: |
      Some modules require extra config entries, specified by the modules themselves.
      Until the documentation is written for the individual modules, please refer to the
      `MODULE_SCHEMA` values of the module's code in
      [the repository](https://github.com/flyte/pi-mqtt-gpio/tree/feature/asyncio/mqtt_io/modules).
      TODO: Link this to the pending wiki pages on each module's requirements.
    yaml_example: |
      sensor_modules:
        - name: dht
          module: dht22
          type: AM2302
          pin: 4
      
      sensor_inputs:
        - name: workshop_temp
          module: dht
          type: temperature
          interval: 30

        - name: workshop_humidity
          module: dht
          type: humidity
          interval: 60
  type: list
  required: no
  default: []
  schema:
    type: dict
    allow_unknown: yes
    schema:
      name:
        meta:
          description: |
            Name of the sensor. Used in the MQTT topic when publishing sensor values.

            The topic that sensor values will be published to is:
            `<mqtt.topic_prefix>/sensor/<this name>`
        type: string
        required: yes
        empty: no
      module:
        meta:
          description: |
            Name of the module configured in `sensor_modules` that this sensor reading
            comes from.
        type: string
        required: yes
        empty: no
      retain:
        meta:
          description: Set the retain flag on MQTT messages published on sensor read.
        type: boolean
        required: no
        default: no
      interval:
        meta:
          description: How long to wait between checking the value of this sensor.
          unit: seconds
        type: integer
        required: no
        default: 60
        min: 1
      digits:
        meta:
          description: How many decimal places to round the sensor reading to.
        type: integer
        required: no
        default: 2
        min: 0
      ha_discovery:
        meta:
          description: |
            Configures the
            [Home Assistant MQTT discovery](https://www.home-assistant.io/docs/mqtt/discovery/)
            for this sensor.

            Any values entered into this section will be sent as part of the discovery
            config payload. See the above link for documentation.
          yaml_example: |
            sensor_inputs:
              - name: workshop_temp
                module: dht
                type: temperature
                ha_discovery:
                  name: Workshop Temperature
                  device_class: temperature

              - name: workshop_humidity
                module: dht
                type: humidity
                ha_discovery:
                  name: Workshop Humidity
                  device_class: humidity
        type: dict
        allow_unknown: yes
        schema:
          component:
            meta:
              description: Type of component to report this sensor as to Home Assistant.
            type: string
            required: no
            empty: no
            default: sensor
          expire_after:
            meta:
              description: How long after receiving a sensor update to declare it invalid.
              extra_info: |
                Defaults to `interval` * 2 + 5
            type: integer
            required: no
            min: 1

logging:
  meta:
    description: |
      Config to pass directly to
      [Python's logging module](https://docs.python.org/3/library/logging.config.html#logging-config-dictschema)
      to influence the logging output of the software.
  type: dict
  required: no
  allow_unknown: yes
  default:
    version: 1
    handlers:
      console:
        class: logging.StreamHandler
        formatter: default
        level: INFO
    formatters:
      default:
        format: "%(asctime)s %(name)s [%(levelname)s] %(message)s"
        datefmt: "%Y-%m-%d %H:%M:%S"
    loggers:
      mqtt_io:
        level: INFO
        handlers:
          - console
        propagate: yes

reporting:
  meta:
    description: |
      Configuration for reporting back to the developers using
      [Sentry](https://sentry.io/welcome/) to help diagnose issues.

      *This is **not** enabled by default*
    extra_info: |
      Your config file is included in the report, but has the host, port and username
      hashed and the password removed. Sentry's SDK automatically attempts to remove
      password data, but the other values may still be exposed within the Python traceback
      context.
    yaml_example: |
      reporting:
        enabled: yes
        issue_id: 123
  type: dict
  required: no
  schema:
    enabled:
      meta:
        description: |
          Enable the sending of error reports to the developers if the software crashes.
      type: boolean
      required: yes
    issue_id:
      meta:
        description: The GitHub Issue ID that the specific error relates to.
        extra_info: |
          This is useful if you've reported a specific issue on the project repository and
          want to provide additional context to help the developers diagnose the issue.
      type: integer
      required: no

options:
  meta:
    description: Miscellaneous options regarding the runtime behaviour of MQTT IO.
    yaml_example: |
      options:
        install_requirements: no
  type: dict
  required: no
  default: {}
  schema:
    install_requirements:
      meta:
        description: Whether to install missing module packages on startup.
      type: boolean
      required: no
      default: yes
